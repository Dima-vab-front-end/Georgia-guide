{
  "root": true,
  "env": {
    "node": true
  },
  "extends": [
    "plugin:vue/vue3-essential",
    "plugin:vue/vue3-recommended",
    "plugin:prettier/recommended",
    "eslint:recommended",
    "@vue/prettier"
  ],
  // required to lint *.vue files
  "plugins": ["vue", "@typescript-eslint"],
  "parserOptions": {
    "parser": "@typescript-eslint/parser"
  },
  "rules": {
    "no-console": "warn",
    "no-debugger": "warn",
    "vue/multi-word-component-names": "off",
    "vue/max-attributes-per-line": "off",
    "vue/require-toggle-inside-transition": "off",
    "vue/no-undef-components": [
      "error",
      {
        // ignore global components
        "ignorePatterns": [
          "^st-",
          "router-view",
          "vue-good-table",
          "loading-overlay"
        ]
      }
    ],
    "vue/require-default-prop": "off",
    "vue/component-tags-order": [
      "error",
      {
        "order": ["template", "script"]
      }
    ],
    "vue/no-v-html": "off",
    "prettier/prettier": [
      "error",
      {},
      {
        "usePrettierrc": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": ["enum", "enumMember"],
        "format": ["PascalCase", "UPPER_CASE"]
      },
      {
        "selector": ["variableLike"],
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["UPPER_CASE", "PascalCase", "camelCase"]
      }
    ],
    "vue/component-definition-name-casing": ["warn", "kebab-case"],
    "vue/require-v-for-key": "off"
  },

  "overrides": [
    {
      "files": [
        "src/models/swagger/models.ts",
        "src/models/swagger-partners/*.ts"
      ],
      "rules": {
        "no-redeclare": 0
      }
    }
  ]
}
